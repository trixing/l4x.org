<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" 
   xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" 
   xmlns:html="http://www.w3.org/1999/html" 
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
   xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
<channel>
   <title>l4x.org</title>
   <link>https://l4x.org</link>
   <description>Home of Jan Dittmer</description>
   <language>en</language>
   <copyright>Copyright 2008-2016 Jan Dittmer</copyright>
   <ttl>60</ttl>
   <pubDate>Fri, 10 Jun 2005 03:27 GMT</pubDate>
   <managingEditor>jdi@l4x.org</managingEditor>
   <generator>PyBlosxom http://pyblosxom.sourceforge.net/ 1.5.3</generator>
<item>
   <title>postgresql:_Grant_all_rights_on_a_database_to_a_user</title>
   <guid isPermaLink="false">unix/postgresql:_Grant_all_rights_on_a_database_to_a_user</guid>
   <link>https://l4x.org/unix/postgresql%3A_Grant_all_rights_on_a_database_to_a_user.html</link>
   <description><![CDATA[

Ever tried the $SUBJECT task with postgresql? It's a bit difficult.<br> You need something along the lines of this...


Ever tried the $SUBJECT task with postgresql? It's a bit difficult.<br> You need something along the lines of this...
<!--break-->

<pre>
#!/bin/sh

DB="$1"
USER="$2"
PSQL="psql -q -n -A -t"
SCHEMES="'public'"

if [ -z "$1" ]; then
        echo No name given
        exit
fi

if [ -z "$2" ]; then
        USER="$1"
fi
echo "-- Granting rights on $DB to $USER ($SCHEMES)"
# tables
Q="select 'grant all on '||schemaname||'.'||tablename||' to \\\"$USER\\\";' from pg_tables where schemaname in ($SCHEMES);"
$PSQL -c "$Q" "$DB";

# views
Q="select 'grant all on '||schemaname||'.'||viewname||' to \\\"$USER\\\";' from pg_views where schemaname in ($SCHEMES);"
$PSQL -c "$Q" "$DB";

# sequences
Q="select 'grant all on function '||n.nspname||'.'||p.proname||'('||oidvectortypes(p.proargtypes)||') to \\\"$USER\\\";' from pg_proc p, pg_namespace n where n.oid = p.pronamespace and n.nspname in ($SCHEMES);"
$PSQL -c "$Q" "$DB";

# functions
Q="select 'grant all on '||n.nspname||'.'||c.relname||' to \\\"$USER\\\";' from pg_class c, pg_namespace n where n.oid = c.relnamespace and c.relkind IN ('S') and n.nspname in ($SCHEMES);"
$PSQL -c "$Q" "$DB";

</pre>
(Sorry for the crappy formatting, drupal &amp; me sucks)<br>
<br>
This will generate a script which in turn will grant the rights.
So a typical call will be (as postgres user)
<pre>
./grant mydatabase myuser | psql mydatabase
</pre>


]]></description>
   <category domain="https://l4x.org"></category>
   <pubDate>Fri, 10 Jun 2005 03:27 GMT</pubDate>
</item>
</channel>
</rss>
