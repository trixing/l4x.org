<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" 
   xmlns:creativeCommons="http://backend.userland.com/creativeCommonsRssModule" 
   xmlns:html="http://www.w3.org/1999/html" 
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" 
   xmlns:slash="http://purl.org/rss/1.0/modules/slash/">
<channel>
   <title>l4x.org</title>
   <link>https://l4x.org</link>
   <description>Home of Jan Dittmer</description>
   <language>en</language>
   <copyright>Copyright 2008-2016 Jan Dittmer</copyright>
   <ttl>60</ttl>
   <pubDate>Sat, 16 Nov 2013 21:00 GMT</pubDate>
   <managingEditor>jdi@l4x.org</managingEditor>
   <generator>PyBlosxom http://pyblosxom.sourceforge.net/ 1.5.3</generator>
<item>
   <title>Python: gevent's WSGIServer, wsgi vs. pywsgi
</title>
   <guid isPermaLink="false">python/gevent_wsgi_vs_pywsgi</guid>
   <link>https://l4x.org/python/gevent_wsgi_vs_pywsgi.html</link>
   <description><![CDATA[
<p>The gevent wsgi server is one of the fastest out in the open.
I switched part of my applications to it and everything worked
fine after restarting the server and testing locally.  Unfortunately my
<tt class="docutils literal">haproxy</tt> frontend loadbalancer is not able to see the new backend
though.  Turns out that <tt class="docutils literal">gevent.wsgi</tt> does not support HTTP 1.0 which
<tt class="docutils literal">haproxy</tt> uses for health checking.</p>
<p>The simple solution is to use <tt class="docutils literal">gevent.pywsgi</tt>.  This has some performance
penalty though.</p>
<p>An alternative might be (untested) to configure <tt class="docutils literal">haproxy</tt> with HTTP 1.1
healthchecks:</p>
<pre class="literal-block">
option httpchk OPTIONS / 1.1
</pre>
<p></p>

]]></description>
   <category domain="https://l4x.org"></category>
   <pubDate>Sat, 16 Nov 2013 21:00 GMT</pubDate>
</item>
</channel>
</rss>
